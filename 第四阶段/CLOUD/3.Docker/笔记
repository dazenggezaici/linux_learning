Docker：  # 是管理容器的系统
	封装应用层，如：将DNS服务器内的系统应用封装成A，A传给B物理主机，则B也可为DNS服务器
	容器如何区分：
		基于操作系统之上
		命名空间：
			主机名
			网络：network
			文件系统
			进程
			用户
			信号向量：signal
	注：
		只支持64位操作系统，系统推荐RHEL7以上，RHEL6对Docker支持非常不好
		需要关闭防火墙
	软件包：
		docker-engine
		docker-engine-selinux
	创建自定义yum源：
		createrepo 目录  # 操作可以将该目录成为配置yum的baseurl地址

例：
	docker1 192.168.1.21  # 需要能ping通主机名，修改hosts
	docker2 192.168.1.22
	yum -y install docker-engine*
	systemctl restart docker
	docker基础命令：
		docker version
		docker images  # 查看镜像,最基础镜像，base.image官方有得下载
		docker search 镜像关键字  # 查找(搜索)镜像，前提能上网，需要有DNS
			# OFFICIAL该选项是OK，标示官方镜像
		docker search busybox  # 测试查找busybox
		docker pull busybox  # 下载对应的镜像
	docker导入导出：
		docker save busybox:latest > busybox.tar  # 导出到文件
		docker save 镜像名:标签(默认为latest) > 备份名  # 由于默认备份的文件类型就为tar包，所以最好把备份文件名命名为**.tar
		docker load < busybox.tar  # 导入，还原
	docker启动镜像：
		docker run -it centos:latest /bin/bash
			# docker [选项] [选项的子选项] 镜像名 镜像解释器
	docker ps  # 查看正在运行的容器
	docker inspect busybox  # 查看镜像详细信息，底层信息
	docker history busybox  # 查看镜像的大致制作过程，历史
	
	进阶选项：
		rmi 镜像名  # 删除镜像
		tag 镜像名:标签 别名:别名标签  # 给镜像设置别名
容器常用命令：  # 上面应该是docker镜像的常用命令
	docker run|ps|stop|start|restart
	run:  # 三过程：创建，启动，进入
		-i  # 交互式
		-t  # 分配终端
		-d  # 后台运行
	docker ps -a  # 显示所有启动过的容器
	docker attach 容器ID  # 进入容器
	docker exec -it 容器ID /bin/bash  # 尽量用这种方式进入容器
	docker top 容器ID  # 查看容器进程列表
	docker rm 容器ID  # 删除容器
	docker rm $(docker stop $(docker ps -qa))  # 删除所有容器
	ctrl+p+q(p和q不需要同时按，先按p再按q，ctrl不放开)，不杀死容器退出

