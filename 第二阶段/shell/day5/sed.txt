sed:  # 流式编辑器
	功能：非交互式的文本编辑
	特点：顺序逐行执行
	格式：
		sed 选项 定址符+执行指令 目标文件
		前置命令 | sed 选项 定址符+执行指令

	选项：
		-n 屏蔽默认输出  # 一般用于会默认输出的执行指令的处理，
							如(p,=),但d不会默认输出，所以不用加-n
		-r 使用扩展正则
		-i 将结果保存到文件（一般先确认修改正确后再加-i）

	执行指令：  # 可以再执行指令前加个!表示取反
		p 输出相应内容
		d 删除对应的内容
		s 替换对应内容：
			s///,这里的/可以用!@#$%^&*()这些符号代替
			sed 's/old/new/' user.txt  # 替换所有行的第一个old替换成new
			sed '2s/old/new/2g'  # 替换第二行的从第二个old开始往后的所有替换成new
		i行前插入，a行后插入，c替换行：
			sed '1i xxxx' user.txt  # 在第一行之前插入xxxx
			sed '1a xxxx' user.txt  # 在第一行之后插入xxxx
			sed '1c xxxx' user.txt  # 把第一行完全改成xxxx
		r读取文件，w另存为：
			sed 'r /etc/passwd' 1.txt  # 把/etc/passwd内的所有内容追加到1.txt中
							r前面还可以加定址符
			sed 'w new.txt' 1.txt  # 把1.txt文件另存为new.txt文件，w前也可以加定址符
		补充：sed -n '=' user.txt  # 只显示文本的行号
			  sed -n '$=' user.txt  # 显示最后一行的行号
			  sed '/^$/d' user.txt  # 可删除空行

	定址符：
	行号定位：  # 用p的时候选项需要加-n，删除(d)的时候不用加-n
		显示第一行：就直接写个1p，第二行就2p  # sed -n '1p' user.txt
		同时显示一二行：1p;2p;
		同时显示一至三行：1,3p
		同时显示第二行和第二行后面的两行：2,+2p
		从第一行开始，每两行（隔一行）输出一次：1~2p  # 输出1,3,5..(2n-1)行
		从第二行开始，每两行（隔一行）输出一次：2~2p  # 输出2,4,6..(2n)行
		删除最后一行：sed '$d' user.txt  # $可表示最后一行
	正则匹配：  # sed -n '/正则表达式/p' user.txt
		sed 's/.//2' user.txt  # 删除每行中的第二个字符
		sed 's/.$//' user.txt  # 删除每行中的最后一个字符
		(A)复制A，\1粘贴
		sed -r 's/(^.)(.*)(.$)/\3\2\1/'
			# 复制头单词，中间任意长和尾单词，头尾单词互换
		
		
		
