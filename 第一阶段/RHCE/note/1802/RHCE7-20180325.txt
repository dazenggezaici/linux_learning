

RHCE 核心考点列表
####################################################

一、安全策略配置 ――
1. 配置SELinux
SELinux，安全增强的Linux系统（保护机制）
是美国NSA提出来的，集成了一套（比如红帽公司预先配置的targetmls）保护文档、用户、进程等资源对象的安全策略

运行模式：
enforcing，强制生效（内核加载SELinux机制，并且启用保护）
permissive，宽松（内核加载SELinux机制，只记录不保护）
disabled，禁用（内核不加载SELinux机制）

# vim  etcselinuxconfig
SELINUX=运行模式

临时切换SELinux模式：
setenforce  1 		==》由permissive变为enforcing
setenforce  0 		==》由enforcing变为permissive
getenforce

2. 配置SSH访问
# vim  etcsshsshd_config
.. ..
AllowUsers  用户名1@客户机地址1    用户名2@客户机地址2  
或者
DenyUsers  用户名1@客户机地址1    用户名2@客户机地址2  

# systemctl restart  sshd


3. 自定义用户环境（别名设置）

命令别名，为复杂的命令行设置简短的名称
创建别名：
alias  别名='实际执行的复杂的命令行'
查看别名：
alias

用户登录（通常进入binbash命令环境）后自动执行XXX操作：
# vim  etcbashrc  			【~.bashrc】
XXX操作
alias  别名='实际执行的复杂的命令行'
alias qstat='binps -Ao pid,tt,user,fname,rsz'

# 验证结果（退出重登录，或以其他用户登录）


4. 配置防火墙端口转发

5423 ==》80

httpserver0.example.com5423
httpserver0.example.com

防火墙服务：firewalld

实现端口转发必须用到防火墙
默认开启的防火墙服务只允许访问sshd，其他访问都拒绝

预配置的安全区：
public ―― 只允许访问本机的sshd等少数几个服务，其他都拒绝
trusted ―― 信任区，允许任何访问
block ―― 拒绝任何访问
drop ―― 丢弃任何来访的数据包
home、internal、……


配置位置：
运行时配置（runtime）
永久配置（permanent）




策略配置工具：
firewall-cmd、firewall-config


firewall-cmd的基本用法 ――
firewall-cmd  --list-all
firewall-cmd  --list-all-zones
firewall-cmd  --get-default-zone 
firewall-cmd  --set-default-zone=区域名 
firewall-cmd  [--permanent]  --zone=安全区名  --add-source=来源网段地址  --add-service=服务名
firewall-cmd --permanent --zone=trusted  --add-forward-port=被转发端口配置协 议配置目标端口配置
firewall-cmd --permanent --zone=trusted  --add-forward-port=port=被转发端口proto=协议名toport=目标端口



配置防火墙策略：
在server0上 ――
1）允许访问本机的所有端口
# firewall-cmd  --set-default-zone=trusted
2）拒绝指定的网段
# firewall-cmd  --permanent  --zone=block  --add-source=172.34.0.024
3）实现5423==》80端口转发
# firewall-cmd  --permanent --zone=trusted --add-forward-port=port=5423proto=tcptoport=80
# firewall-cmd  --reload

在desktop0上 ――
1）允许访问本机的所有端口
# firewall-cmd  --set-default-zone=trusted
2）拒绝指定的网段
# firewall-cmd  --permanent  --zone=block  --add-source=172.34.0.024





二、网络连接配置 ――

5. 配置链路聚合
网卡 bond ==》team 
将多个网卡捆绑成一个虚拟网卡，共用同一个IP地址（负载均衡、热备份）

轮询负载 ―― roundrobin
热备份 ―― activebackup

nmcli配置聚合连接的基本过程 ――
1）创建聚合连接（组队）
# nmcli con add type team con-name Team1 ifname Team1 config '{工作模式}'
2）为聚合连接添加成员网卡（组员）
# nmcli con add type team-slave con-name Team1-slave1 ifname 物理网卡名1   master Team1
# nmcli con add type team-slave con-name Team1-slave2 ifname 物理网卡名2   master Team1
3）配置IP地址相关参数
# nmcli con mod  Team1  ipv4.method  manual  ipv4.addresses  172.16.3.2024  connection.autoconnect  yes
# nmcli con mod  Team1-slave1  connection.autoconnect  yes
# nmcli con mod  Team1-slave2  connection.autoconnect  yes

4）激活聚合连接
# nmcli con  up  Team1 


检查聚合连接状态：
# teamdctl  Team1  state


获取命令操作帮助信息：
# man  nmcli-examples ==》查找 Team1
       Example 7. Adding a team master and two
       slave connection profiles
           $ nmcli con add type team con-name Team1 ifname Team1 config team1-master-json.conf
           $ nmcli con add type team-slave con-name Team1-slave1 ifname em1 master Team1
           $ nmcli con add type team-slave con-name Team1-slave2 ifname em2 master Team1


获取工作模式写法帮助信息：
# man  teamd.conf  ==》runner

runner {name roundrobin}
或
runner {name activebackup}


关于群公告提供的 VMware虚拟机环境：
server0、desktop0都没有提供eth1、eth2

可以在server0上执行 lab  teambridge  setup 操作，会自动添加两块虚拟网卡 eno1、eno2
或者
自行另外准备两个虚拟机，分别为这两个虚拟机添加第2、3块网卡






6. 配置IPv6地址
第4版IP协议，32个二进制位
第6版IP协议，128个二进制位，让地球上每一颗沙子都有独立地址

IPv4地址，172.25.0.11（点分十进制）
IPv6地址，2003ac18305（冒号分十六进制）


2003ac18000000000000000000000305

简写规则：
前置的0可以省略
某一段全部都是0，都可以省略
连续多个冒号，可以只保留一对

配置IPv6地址的方法：
# nmcli  connnection  modify  连接名  ipv6.method  manual  ipv6.addresses  IPv6地址掩码长度
# nmcli  connnection  up  连接名

检查目标IPv6地址是否可连通：
ping6  目标IPv6地址

常见问题：
配了IPv6地址的系统，重起后主机名变为localhost.localdomain
原因：
未固定主机名的系统，如果只有一个非回环IP地址，则自动采用从DNS查到的主机名；如果DNS查不到，或者有多个非回环IP地址，则采用默认主机名localhost.localdomain
解决办法：
为两个主机设置正确的、静态的主机名



三、配置邮件服务器 ――
7. 配置本地邮件服务

普通常规邮件服务器：
1）提供电子邮箱账号及对应的邮箱存储
2）向外发送电子邮件
3）接收并投递（存储到目标用户的邮箱）邮件

nullclient零客户邮件服务器：
1）不提供电子邮箱账号，也不需要对应的邮箱存储
2）为本机向外发送电子邮件
3）不接收也不投递（存储到目标用户的邮箱）邮件


应用场景：
假设运维工程师的邮箱是 tedu@163.com、CTO主管boss@qq.com
存放在IDC数据中心的服务器 A，向外发送报警邮件：
    收件人地址：tedu@163.com，抄送给 boss@qq.com
    发件人地址：root@服务器A的IP地址

问题：
1）服务器A不方便接收邮件
2）就算服务器A能收到邮件，运维工程师不方便收取邮件


解决办法：伪装发件人来源（服务A的IP地址 ==》tedu@163.com）
    收件人地址：tedu@163.com，抄送给 boss@qq.com
    发件人地址：tedu@163.com

把服务器A配置成一台零客户端邮件服务器 ――
1）把本机的邮件交给另外一台邮件服务器（mail.163.com）来处理
2）阻止接收来自其他机器的邮件

考试环境：
1）考官负责提供后端上游邮件服务器【mail.163.com】
2）system1、system2 都需配置为 nullclient 邮件服务器


练习模拟环境：
1）使用desktop0模拟成后端上游邮件服务器
# hostnamectl  set-hostname  desktop0.example.com
# lab  smtp-nullclient  setup

2）将 server0 需配置为 nullclient 邮件服务器
# hostnamectl  set-hostname  server0.example.com
# yum  -y  install  postfix
# vim  etcpostfixmain.cf  【查找并修改相应设置】
relayhost = [后端邮件服务器的域名]
inet_interfaces = loopback-only
myorigin = 发件来源地址
mynetworks = 127.0.0.08 [1]128
mydestination = 投递域（应该清空）
# systemctl  restart  postfix

检查零客户端服务器server0是否可用：
在server0上 ――
# echo AAAAAA  mail  -s  Test1  student
在desktop0上 ――
# mail  -u  student

可能出现的问题：
1）没有配置正确的静态主机名
2）postfix配置有误
3）练习环境的 desktop0 忘记做lab操作
4）两台主机的防火墙策略

排错依据：
# less  varlogmaillog

获取postfix服务配置帮助：
# man  5  postconf


模拟考试的特殊情况（正式考试时如果没要求不用做）：
当其他客户机提交邮件给nullclient邮件服务器时，给出报错信息
local_transport = error报错信息




四、配置文件服务器客户端 ―― 
8. 通过Samba发布共享目录
用途：为客户机提供共享访问的目录（实现微软SMBCIFS协议）
软件包：samba
配置文件：etcsambasmb.conf
[global]
	一些全局设置参数
	workgroup = 工作组名
[共享名]
	path = 目录的绝对路径
	hosts  allow  =  允许访问此共享的客户机地址 ...
	;browseable = yes
	;read only = yes
	;valid users = 允许访问此共享的共享账号

系统服务：smb

Samba共享账号的管理：
pdbedit  -a  用户名  		【必须是已经存在的系统用户】
pdbedit  -x  用户名
pdbedit  -L


检查Samba共享目录是否可用 ――
软件包：samba-client  ==》 smbclient命令
列出目标主机提供了哪些共享：
smbclient  -L  服务器地址 		【无需密码，直接回车】

连接目标主机的指定的共享目录：
smbclient  -U  用户名    服务器地址共享名

设置SELinux（为各种服务提供了一些开关参数）允许对外共享目录：
布尔值参数，
getsebool  -a   grep  samba
setsebool  -P  samba_export_all_rw=on 


关于XX服务资源的获取权限：
1）资源目录本身的rwx权限
2）XX服务的配置的许可
3）SELinux的策略允许


9. 配置多用户Samba挂载
第一部分：服务端提供devops共享（解决个别用户可写入）
write list = 个别用户名

第二部分：客户端把共享挂载到mntdev，并且支持多用户
建议先smbclient测试，确保服务端没问题
1）挂载Samba共享目录的方法
# yum  -y  install  cifs-utils
# vim  etcfstab
server0.example.comdevops    mntdev
cifs   username=kenji,password=atenorth,_netdev
  0  0
# mount  -a
# df  -hT  mntdev 	【检查挂载的设备是否正确】

2）支持多用户的方法
目标：针对客户机上的普通用户，在访问挂载点mntdev时需要重新验证身份（共享用户名、密码），从而可以为不同用户给不同权限【把kenjiatenorth告诉客户机的zhsan，把chihiroatenorth告诉客户机的lisi】
添加挂载参数：multiuser,sec=ntlmssp

3）测试多用户访问时，如何切换不同的共享账号身份
# su  -  普通用户
$ cifscreds  add  -u chihiro  server0.example.com
Password提供chihiro的密码
$ touch  mntdevch.txt


10. 配置NFS共享服务
Network File System
用途：为客户机提供共享访问的目录（实现NFS协议）
软件包：nfs-utils
配置文件：etcexports
目录的绝对路径		客户机的地址(权限)
public			172.25.0.024(ro)
系统服务：nfs-server


LDAP+kerberos集中认证 ――
LDAP服务来提供用户名、kerberos服务来提供检查密码
通过kerberos的通行证机制实现“一次认证，多次免密登录”

classroom：LDAP+kerberos
server0、desktop0：客户机

练习环境准备（前提条件）：
在server0、desktop0上执行下列操作
# lab  nfskrb5  setup

安全NFS的配置过程：
1）共享目录的准备
2）部署用来实现kerbros加密的密钥文件
固定位置：etckrb5.keytab
3）配置 etcexports
protected	172.25.0.024(rw,sec=krb5p)
4）启动服务 nfs-server、nfs-secure-server

11. 挂载NFS共享
软件包：nfs-utils
检查目标本机提供了哪些共享
# showmount  -e  [目标主机地址]
# vim  etcfstab
服务器地址NFS共享目录  挂载点   nfs   _netdev  0  0
# mount  -a

客户机挂载安全NFS的配置过程：
1）挂载点目录的准备
2）部署用来实现kerbros加密的密钥文件【与服务端的密钥不同】
固定位置：etckrb5.keytab
3）启动服务 nfs-secure
4）配置 etcfstab 开机挂载
server0.example.comprotected  mntnfssecure  nfs     sec=krb5p,_netdev  0  0
5）挂载
# mount  -a

在客户机上测试对安全NFS的访问
# ssh  ldapuser0@desktop0.example.com
.. .. password密码是kerberos
$ touch  mntnfssecureprojecta.txt


客户机访问Samba资源的写法：服务器地址共享名
客户机访问NFS资源的写法：服务器地址目录的绝对路径

安全NFS共享的服务端的系统服务：
	nfs-server、nfs-secure-server
安全NFS共享的客户端的系统服务：
	nfs-secure

检查kerberos密钥文件的内容：
# klist  -k  etckrb5.keytab


19. 配置iSCSI服务端
Internet SCSI 网络磁盘柜

用途：把本机的磁盘分区设备通过网络提供给其他客户机使用
软件包：targetcli
配置：targetcli

发布一个iSCSI网络磁盘柜（target）的基本思路：
1）预先准备空闲的存储设备（物理设备）
2）为这块物理存储设备起一个逻辑名称（后端存储）
3）创建一个target磁盘柜对象（虚拟设备）
==》这个磁盘柜装入的是哪一个后端存储设备，作为逻辑磁盘luns
==》这个磁盘柜允许哪个客户机（通过IQN名称识别）访问（acls）
==》通过本机哪一个IP及端口可以访问这个磁盘柜（portals）
4）启动target服务

一个target磁盘柜对象 就是通常说的 iSCSI网络磁盘
IQN，ISCSI Qualified Name名称规范：
   iqn.yyyy-mm.倒序的DNS区域自定义标识


iSCSI磁盘柜的名称，题目直接给：
iqn.2016-02.com.exampleserver0

自定义客户机的IQN名称：
iqn.2016-02.com.exampledekstop0

发布一个iSCSI网络磁盘柜（target）的基本思路：
1）预先准备空闲的存储设备（物理设备）
2）为这块物理存储设备起一个逻辑名称（后端存储）
# targetcli
 backstoresblock create  iscsi_store  devvdb1
3）创建一个target磁盘柜对象（虚拟设备）
 iscsi create  iqn.2016-02.com.exampleserver0
==》这个磁盘柜装入的是哪一个后端存储设备，作为逻辑磁盘luns
==》这个磁盘柜允许哪个客户机（通过IQN名称识别）访问（acls）
==》通过本机哪一个IP及端口可以访问这个磁盘柜（portals）
4）启动target服务


20. 配置iSCSI客户端
用途：管理员预先连接由服务端提供的网络磁盘柜，使用磁盘时就好像使用本机直接连接的磁盘一样
软件包：iscsi-initiator-utils （通常默认已安装）

0）为本机指定IQN名称
# vim  etciscsiinitiatorname.iscsi
InitiatorName=iqn.2016-02.com.exampledekstop0
# systemctl  restart  iscsid  【更新IQN名称】

1）发现、连接指定的iSCSI网络磁盘
# iscsiadm  -m  discovery  -t  st  -p  服务器地址
# iscsiadm  -m  node  -L all
2）对通过第1）步生成的配置文件做微调（开机自动加载）
# vim  varlibiscsinodesTABTABTAB
查找 startup，确保对应的值 是 automatic
# systemctl  enable  iscsi 		【连接iSCSI设备】



RHEL7.0环境的小Bug：iSCSI客户机配置完后，重起会死机
解决办法：
不要直接reboot，
改用 sync ；  reboot  -f

# vim  etcbashrc
.. ..
alias  reboot='sync ；  reboot  -f'




五、配置网站服务器（httpd）

单一网站平台：
httpserver0.example.com  ==》网页1
httpwww0.example.com ==》网页1
httpwebapp0.example.com ==》网页1

虚拟Web主机平台：在一个主机上搭建多个Web站点
httpserver0.example.com  ==》网页1
httpwww0.example.com ==》网页2
httpwebapp0.example.com ==》网页3

httpd服务配置文件：
etchttpdconfhttpd.conf 		【默认全局配置】
etchttpdconf.d.conf 		【自定义配置】

建议：为每一个虚拟Web站点单独准备一份文件
VirtualHost   80
	ServerName  虚拟站点1的DNS名称
	DocumentRoot  虚拟站点1的网页目录
VirtualHost
VirtualHost   80
	ServerName  虚拟站点2的DNS名称
	DocumentRoot  虚拟站点2的网页目录
VirtualHost


常见的配置语句：
DocumentRoot  网页目录（varwwwhtml）
ServerName  网站的DNS名称（空）
DirectoryIndex  默认首页文件名（index.html）
Listen  监听IP地址端口


12.实现一个web服务器
14.配置虚拟主机

问题：如果先wget再mv到网页目录，会出现网页失效的情况
原因：文档的SELinux安全属性不一样
解决办法：
1）部署网页时避免先wget再mv到网页目录
2）选择的网页目录尽量放到 varwww...

补充：
# chcon  --reference=varwww  自定义网页目录

13.配置安全web服务
HTTP，80
HTTPS，443

TLS（传输层安全）加密
SSL（安全套接字层）加密

httpserver0.example.com
httpsserver0.example.com


软件包：httpd  mod_ssl
mod_ssl软件包的作用
1）提供相应的功能模块
2）提供预先配置好的httpd服务配置文件
3）加密用的数子证书localhost.crt、密钥localhost.key

调整配置文件：etchttpdconf.dssl.conf
SSL。。。。
VirtualHost  _default_443
    ServerName  server0.example.com
    DocumentRoot  varwwwhtml
       #调用加密用的3个资源文件		【查找localhost】
    SSLCertificateFile ...server0.crt
    SSLCertificateKeyFile ...server0.key
    SSLCACertificateFile ...example-ca.crt
VirtualHost



15.配置web内容的访问

Directory  目录的绝对路径
    Require  all  denied
    Require  all  granted
    Require  ip  客户机的地址
Directory


16.实现动态WEB内容（Python网页）

静态网页：浏览器看到的内容不变
动态网页（程序）：浏览器看到的内容会动态变化（由服务端的程序生成的）

软件包：httpd  mod_wsgi
关键配置：
WSGIScriptAlias  路径别名   实际的网页程序的绝对路径

httpwebapp0.example.com路径别名

# cat etchttpdconf.d02-webapp0.conf
Listen 8909
VirtualHost   8909
    ServerName  webapp0.example.com
    DocumentRoot  varwwwwebapp0
	WSGIScriptAlias     varwwwwebapp0webinfo.wsgi
VirtualHost


SELinux对Web服务的保护 ――
  只允许开放个别端口（80，443，81，……）

如果遇到SElinux导致的服务故障，
查看日志消息
# less  varlogmessages 	【或者 sealert】
.. .. 查找 8909
  Plugin bind_ports (92.2 confidence) sugge
sts   

If you want to allow usrsbinhttpd to bind to network port 8909
Then you need to modify the port type.
Do
# semanage port -a -t PORT_TYPE -p tcp 8909
    where PORT_TYPE is one of the following http_cache_port_t, http_port_t, jboss_management_port_t, jboss_messaging_port_t, ntop_port_t, puppet_port_t.


补充：获取httpd服务配置帮助
# yum  -y  install  httpd-manual
# systemctl  restart  httpd
# firefox  http服务器地址manual 


六、Shell脚本编程 ―― 
17. 创建一个脚本
什么是脚本：为了完成特定的运维任务，集中了大量可执行语句的文件，使用脚本的好处（可以重复使用、简化任务操作）
脚本的编写和执行：
# vim  脚本文件
#!binbash 				环境声明（Sha-Bang）
# 。。。注释
。。。任务操作指令
# chmod  +x  脚本文件

# 脚本文件的路径


简单脚本示例：添加用户 zhsan，密码设置为123456
useradd  zhan
echo  123456  passwd  --stdin  zhsan

变量的使用及常用的特殊变量：
什么叫变量，使用固定的名称来存放不确定变化的值

$1、$2、……、${10}、……
==》提取用户在执行当前脚本的给的第一、二个位置参数
$# ==》提取用户给出的位置参数的数量
自定义变量 ==》  变量名=值
调用变量的值 ==》$变量名
系统环境变量 ==》变量由系统预先设置（获取系统指标），名称一般大写，比如 USER、PATH


系统指标条件的测试，依据变量 $ 的值：
$，表示的是前一条命令行退出时报告给内核的数值（0成功、非0失败）
各种测试方法 ――
任何一条命令行
test  -选项   参数   ===或者===  [  -选项   参数  ]

test测试操作的常见用法：
文件或目录测试：-d、-f、-e、-r、-w、-x
字符串比较：==、!=
整数值比较：-gt、-ge、-lt、-le、-eq、-ne

单分支if选择判断结构：
if   测试操作
then
	命令序列1
fi

双分支if选择判断结构：
if   测试操作
then
	命令序列1
else
	命令序列2
fi

多分支if选择判断结构：
if   测试操作1
then
	命令序列1
elif  测试操作2
then
	命令序列2
else
	命令序列3
fi

判断学员成绩分数：
90～100 优秀
70～89 合格
0～69 不合格

如何分别提取标准输出、错误输出的结果：
使用重定向机制（把本来在屏幕上显示的内容保存到文件）

命令行或者脚本  1  文件名 		【保存标准输出】
命令行或者脚本  2  文件名 		【保存错误输出】

命令行  1&2 				【把标准输出转交给错误输出】


18. 创建一个添加用户的脚本

脚本的退出状态控制：
退出之前的最后一条命令的$值为准
exit  状态值

for列表式循环：

for  第一个顾客  in  张三  李四  王五 
do
	为$第一个顾客办理银行业务
done

对于  第一个顾客  在  张三  李四  王五 
做事
	为$第一个顾客办理银行业务
结束

提取命令行的显示结果：
$(命令行)

七、配置及管理数据库 ――
21. 配置一个数据库

常见的数据库系统：
Oracle、SQL Server、MySQL ==》MariaDB、……

数据库系统的作用：
存储及管理多份数据库
每一份数据库包括多张二维关系表格信息（行--》一条记录、列字段 --》属性）

每一个人的很多属性：姓名、性别、通信地址、联系电话

搭建及维护数据库服务器 ――
1）装软件包、起服务
# yum  -y  install  mariadb-server   mariadb
# systemctl  restart  mariadb
# systemctl  enable  mariadb
2）监听地址设置
# vim  etcmy.cnf
[mysqld]
skip-networking
# systemctl restart  mariadb
3）数据库用户的授权控制
==== 设置数据库管理员root的密码（默认为空）
# mysqladmin  -uroot  [-p旧密码]  password  '新密码'
==== 增加设置数据库用户及权限
MariaDB [(none)] GRANT  权限列表  ON  库名.表名  TO  用户名@客户机地址  IDENTIFIED BY  '密码字串';


如何连接到数据库系统并执行相关的管理操作 ――
# mysql  [-u用户名]  [-p密码]  [-h服务器地址]
MariaDB [(none)] 数据库管理指令;
MariaDB [(none)] quit



数据库的增删改查选 ――
MariaDB [(none)] SHOW DATABASES;
MariaDB [(none)] CREATE DATABASE 数据库名;
MariaDB [(none)] DROP DATABASE 数据库名;
MariaDB [(none)] USE 数据库名;
MariaDB [(none)] SHOW TABLES;



导入数据库备份的内容 ――
# mysql [-u用户名]  [-p密码]  [-h服务器地址]  数据库名    数据库备份文件.sql

!!!! 导出操作
# mysqldump  [-u用户名]  [-p密码]  [-h服务器地址]  数据库名    数据库备份文件.sql



数据表的增删改查 ―― 
DESC  库名.表名; 			查看表结构


表记录的增删改查 ――
SELECT  字段列表  FROM  库名.表名;
SELECT  字段列表  FROM  库名.表名  WHERE  字段名=值 。。。;
DELETE  FROM  库名.表名  WHERE  字段名=值 。。。;
UPDATE
INSERT
……


WHERE条件子句的写法：
字段名=值
字段名=数值
字段1名=值  AND 字段2名=数值
字段1名=值  OR 字段2名=数值




22. 数据库查询（填空）

导入的库的内容：
人名和居住地，
或者是商品和价格
数据量大约3～5万条记录


SELECT  字段列表  FROM  表1名,表2名  WHERE  表1.字段名=值  AND  表2.字段名=值  AND 表1.字段=表2.字段;


MariaDB [Contacts] select count() from base,location where base.name=Barbara and location.city=Sunnyvale and base.id=location.id;


别忘了提交填写的结果











####################################################